# These vars' values are determined by the parent module, not this script
# The values here represent the default.
# <pathList is also set by the parent
$FIRE_COST:0.5
$FIRE_DELAY:100
$FIRE_RANGE:75
$SHOT_DAMAGE_COUNT:200
$SHOT_DAMAGE_DISTANCE:7
$SHOT_DAMAGE:-7000000

#This one is not set by the parent. Might cause issues if >= 1.
$SHOT_SPEED:3.0 #cells per frame

Self GetPosition >pos
# Find out where we are in the path now
<lifetime 1 add >lifetime
<lifetime <SHOT_SPEED mul >totalDistance

if(<totalDistance <distToNewCell gt)
    # We're in a new cell now! Update things to keep us following the path.
    100 0 do
        if(<totalDistance <distToNewCell lte)
            break
        endif
        #while <totalDistance <distToNewCell gt repeat
        <pathIndex 1 add >pathIndex
        if(<pathIndex <pathList GetListCount 1 sub eq)
            Self true Destroy
        endif

        <nextCell >lastCell
        <pathList[<pathIndex 1 add] >nextCell

        <distToNewCell <lastCell <nextCell Distance dup >cellWidth add >distToNewCell
    loop
endif

# Find our position within our cell
<totalDistance <distToNewCell sub >distThroughCell
<distThroughCell <cellWidth 1 max div >portionThroughCell
<lastCell <nextCell <portionThroughCell @Lerp >pos
Self <pos SetPosition

if(<lifetime 10 mod eq0)
    #CreateEffect(<pos "mortartrail")
endif

# Lerps between two numbers with the weight given
# At 0, it will return the first input.
# At 1, it will return the second input.
# At 0.5, it will return the average.
# And so on.
:Lerp
    >blend >secondNum >firstNum
    <secondNum <firstNum sub <blend mul <firstNum add return

:Once
    <pathList >pathList #Just prevents an erroneous warning from my IRPL extension
    0 >lifetime # counter of frames passed
    0 >pathIndex

    <pathList[0] >lastCell
    <pathList[1] >nextCell
    <lastCell <nextCell Distance dup >cellWidth >distToNewCell


:Destroyed
    CreateEffect(<pos "rocketexplosion")
    PlaySound("retro_impact_colorful_08" 0.5)
    <pos.x 0 round <SHOT_DAMAGE_DISTANCE sub 
    <pos.y 0 round <SHOT_DAMAGE_DISTANCE sub 
    <pos.x 0 round <SHOT_DAMAGE_DISTANCE add 1 add 
    <pos.y 0 round <SHOT_DAMAGE_DISTANCE add 1 add 
    V4 dup false false GetCreeperInArea >preCreeper
    DamageCreeper(<pos EV2 0 round swap 0 round swap <SHOT_DAMAGE_COUNT <SHOT_DAMAGE_DISTANCE <SHOT_DAMAGE -1000000 mul)
    false false GetCreeperInArea <preCreeper swap sub >xp
    "GiveXp" <xp SendMsg