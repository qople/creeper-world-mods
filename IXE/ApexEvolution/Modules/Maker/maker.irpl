$shot_damage:1.5
$shot_damage_radius:1.75
$fire_range:45
$fire_delay:10
$ROTATE_SPEED:4.0
$FIRE_COST:0.5
$actrail:0

$num_shots:1
$shot_speed:4
$spread:10
$dump_mode:0


if(<fire_range <lastRange neq)
    SetLosRange(Self <fire_range)
    SetShowRange(Self <fire_range)
    <fire_range >lastRange
endif

SYS_Operable

if(<dump_mode)
    true >canFire
    Self GetPosition V2(0 1) add >nearestCreeper
else
    GetNearestCreeper(self false) ->nearestCreeper
    <nearestCreeper.x gte0 >canFire
endif

if(<canFire)
	<-nearestCreeper ->rotateTarget
	SignedAngle(GetDirRight(self) <-rotateTarget GetPosition(self) -) ->rotationRemaining
	if (abs(<-rotationRemaining) 0.001 <)
		<-nearestCreeper ->hardTarget
	else
		Rotate(self clamp(<-rotationRemaining neg(<-ROTATE_SPEED) <-ROTATE_SPEED))
		V2(-1 -1) ->hardTarget
	endif
	if (GetTimer0 eq0) 
		if (GetAmmo(self) <-FIRE_COST >=)
			@TryFire
		endif	
	endif	
endif

#---
:TryFire
    if(<dump_mode)
        true >canFire
    else
	    GetCreeperOnLine(self GetRotation(self) 100 <-hardTarget false) ->col
        <-col.x gte0 >canFire
    endif
	if (<canFire)
        PlaySound("acfire" 1.0)
        SendMsg("CreateShot" "maker" Self 2 ListN)
        <fire_delay RandFloat add SetTimer0
        ConsumeAmmo(Self 0.5)
	endif
#---

:Once
    <fire_delay SetTimer0

:Awake
    0 ->lastRange
	EnableLOS(self true)
    SetLosRange(Self <fire_range)
    SetShowRange(Self <fire_range)
    SetShowRangeColor(Self 0 0.8 0.8 0.8 V4)