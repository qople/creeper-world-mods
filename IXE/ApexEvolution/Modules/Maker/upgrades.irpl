# Template for adding a module, along with default upgrades

# The name of the module
$module:"maker"

# Primary behavior of the module
# Defaults to IRPL script 1 if empty
# If the name does not end in ".irpl" and is not blank, it is interpreted as a controller name instead.
$behavior:""

#Defines all the default upgrades for each included module. 
:AddUpgrades
    # Data is how many of this module are on the main ship to start
    <_DATA >startingModules

    CreateList >upgrades

    Table(
        "id"            "nummaker"
        "title"         "Weapon: Maker"
        "description"   "Deposits AC on nearby creeper.Starts weak, but scales well."
        "effect"        "addmodule/maker/1"
        "rarity"        0
        "pickuplimit"   @DetectModuleNum <-*unlockedModules{<module} sub 0 max
    ) <upgrades swap AppendToList

    # Templates, detected by the presence of the "attribute" element
    # They have less control than individual upgrade tables, but are much smaller and easier to work with.
    Table(
        "attribute"         "fire_range"
        "attribute_name"    "range"
        "module"            "maker"
        "title"             "Aerodynamic Shells"
        "effect_type"       "incmult"
        "effect_strengths"  "0.1, 0.15, 0.22, 0.33, 0.5"
    ) <upgrades swap AppendToList
    
    Table(
        "attribute"         "shot_damage"
        "attribute_name"    "AC depth"
        "module"            "maker"
        "title"             "Pressurized Tanks"
        "effect_type"       "incmult"
        "effect_strengths"  "0.1, 0.15, 0.22, 0.33, 0.5"
    ) <upgrades swap AppendToList
    
    Table(
        "attribute"         "shot_damage_distance"
        "attribute_name"    "damage radius"
        "module"            "maker"
        "title"             "Huge Shells"
        "effect_type"       "incmult"
        "effect_strengths"  "0.05, 0.075, 0.11, 0.165, 0.25"
    ) <upgrades swap AppendToList
    
    Table(
        "attribute"         "fire_delay"
        "attribute_name"    "fire delay"
        "module"            "maker"
        "title"             "Efficient Chambering"
        "sequential"        true
        "effect_type"       "incmult"
        "effect_strengths"  "-0.1, -0.1, -0.1, -0.1, -0.1"
        "pickup_limit"      "2,    2,    2,    1,    1"
    ) <upgrades swap AppendToList

    # Artifacts
    Table(
        "id"            "makertrail"
        "title"         "Overflowing Maker Shots"
        "module"        "maker"
        "description"   "Maker shots leave behind a trail of anticreeper as they fly, but deposit less on impact."
        "effect"        "incattr/maker/actrail/1, mulattr/maker/shot_damage/0.5"
        "rarity"        5
        "pickuplimit"   1
    ) <upgrades swap AppendToList

    Table(
        "id"            "makermastery"
        "title"         "Maker Mastery"
        "module"        "maker"
        "description"   "Maker damage X1.5. Removes all future maker upgrades."
        "effect"        "mulattr/maker/shot_damage/1.5, banmodule/maker, banupgrade/nummaker"
        "rarity"        5
        "pickuplimit"   1
    ) <upgrades swap AppendToList

    SendMsg("AddUpgradesToPool" <upgrades) 

:Once
    -1 ->*allModules{<module}
    <behavior ->*moduleBehaviors{<module}
    RegisterForMsg("add" <module concat "AddUpgrades")

:DetectModuleNum
    999 0 do
        if(<-*mainShip <module i concat GetChild -1 eq)
            i return
        endif
    loop
    999 return

